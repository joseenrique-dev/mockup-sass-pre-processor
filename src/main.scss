@import 'config';
@import 'button';


// reusable fnc
@mixin reset-pm {
  padding: 0;
  margin: 0;
}
* {
  @include reset-pm();
  -webkit-box-sizing: border-box;
  box-sizing: border-box;
}

body {
  background-color: $primary-color;
  font-family: Arial, Helvetica, sans-serif;
}

a {
  color: black;
  text-decoration: none;
}

@function size($value) {
  @return $value * $unit;
}

h1 {
  font-weight: bold;
  font-size: size(6);
}
h2 {
  font-weight: lighter;
  font-size: size(3);
}

.container {
  background-color: #fff;
  margin: 100px auto;
  width: 1280px;
  padding: 50px;
  box-shadow: 0 0 20px 2px rgba(0, 0, 0, 0.1);
  border-radius: 20px;
}

ul {
  padding: 0;
  margin: 0;
  list-style: none;
  display: flex;
  gap: 20px;
  li {
    a {
      @include btn($terciary-color, $font-color, 'false');
      // & like a
      &:hover {
        @include btn(
          darken($color: $terciary-color, $amount: 90),
          $terciary-color,
          'false'
        );
        box-shadow: $box-shadow;
      }
    }
  }
}

header {
  nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
  }
}

// UTILS
@function size($n) {
  @return #{$n * $unit};
}

.row {
  display: flex;
  align-items: center;
  .col {
    width: 50%;
  }

  .col-30 {
    width: 30%;
  }

  .col-70 {
    width: 70%;
  }
}

.m-auto {
  margin: 0 auto;
}

@for $i from 1 to $limit {
  .m-#{$i} {
    margin: #{$i * $unit};
  }
}

@for $i from 1 to $limit {
  .p-#{$i} {
    margin: #{$i * $unit};
  }
}

@for $i from 1 to $limit {
  .py-#{$i} {
    padding: #{$i * $unit} 0;
  }
}

@for $i from 1 to $limit {
  .my-#{$i} {
    margin: #{$i * $unit} 0;
  }
}

@for $i from 1 to 4 {
  .w-#{$i * 25} {
    width: $i * 25%;
  }
}
.prices {
  .prev {
    font-size: size(2);
    font-weight: bolder;
    color: $font-color;
    text-decoration: line-through;
  }

  .now {
    font-size: size(5);
    font-weight: bolder;
  }
}

@media (max-width: 1280px) {
  .container {
    width: 100%;
  }
}
